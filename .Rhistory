# 定义逆向预测函数
predict_Ne_from_variance <- function(model, y_target, ne_range = range(data6$Ne)) {
# 目标函数：最小化预测值与目标y的平方差
objective <- function(ne) {
pred <- predict(model, newdata = data.frame(Ne = ne), type = "response")
return((pred - y_target)^2)
}
# 使用optimize寻找最优Ne
result <- optimize(f = objective, interval = ne_range)
return(result$minimum)
}
predicted_Ne <- predict_Ne_from_variance(gam_model6, target_variance)
gam_model6 <- gam(variance ~ s(Ne), data = data6)
# 定义逆向预测函数
predict_Ne_from_variance <- function(model, y_target, ne_range = range(data6$Ne)) {
# 目标函数：最小化预测值与目标y的平方差
objective <- function(ne) {
pred <- predict(model, newdata = data.frame(Ne = ne), type = "response")
return((pred - y_target)^2)
}
# 使用optimize寻找最优Ne
result <- optimize(f = objective, interval = ne_range)
return(result$minimum)
}
# 示例使用：预测variance为0.05时对应的Ne
target_variance <- 0.05
predicted_Ne <- predict_Ne_from_variance(gam_model6, target_variance)
print(predicted_Ne)
# 示例使用：预测variance为0.05时对应的Ne
target_variance <- 0.0000052225
predicted_Ne <- predict_Ne_from_variance(gam_model6, target_variance)
print(predicted_Ne)
range(data6$Ne)
a <- range(data6$Ne)
a
# 定义逆向预测函数
predict_Ne_from_variance <- function(model, y_target, ne_range = c(1000, 1000000)) {
# 目标函数：最小化预测值与目标y的平方差
objective <- function(ne) {
pred <- predict(model, newdata = data.frame(Ne = ne), type = "response")
return((pred - y_target)^2)
}
# 使用optimize寻找最优Ne
result <- optimize(f = objective, interval = ne_range)
return(result$minimum)
}
# 示例使用：预测variance为0.05时对应的Ne
target_variance <- 0.0000052225
predicted_Ne <- predict_Ne_from_variance(gam_model6, target_variance)
print(predicted_Ne)
save(gam_model6, file = "gam_model6.RData")
setwd("C:/Users/86222/Desktop/Tspecies")
devtools::document()
devtools::build()
Tspecies <- function(Ks, miu) {
corrected_Ks <- (-3/4)*log(1-((4*Ks)/3))
Ks_variance <- var(corrected_Ks)
Ks_mean <- mean(corrected_Ks)
package_path <- system.file(package = "Tspecies")
if (miu >= 0.0000001) {
load(paste0(package_path, "/data/gam_model1.RData"))
model <- gam_model1
} else if (miu < 0.0000001 & miu >= 0.00000009505) {
load(paste0(package_path, "/data/gam_model2.RData"))
model <- gam_model2
} else if (miu < 0.00000009505 & miu >= 0.0000000901) {
load(paste0(package_path, "/data/gam_model3.RData"))
model <- gam_model3
} else if (miu < 0.0000000901 & miu >= 0.00000008515) {
load(paste0(package_path, "/data/gam_model4.RData"))
model <- gam_model4
} else if (miu < 0.00000008515 & miu >= 0.0000000802) {
load(paste0(package_path, "/data/gam_model5.RData"))
model <- gam_model5
} else if (miu < 0.0000000802 & miu >= 0.00000007525) {
load(paste0(package_path, "/data/gam_model6.RData"))
model <- gam_model6
} else if (miu < 0.00000007525 & miu >= 0.0000000703) {
load(paste0(package_path, "/data/gam_model7.RData"))
model <- gam_model7
} else if (miu < 0.0000000703 & miu >= 0.00000006535) {
load(paste0(package_path, "/data/gam_model8.RData"))
model <- gam_model8
} else if (miu < 0.00000006535 & miu >= 0.0000000604) {
load(paste0(package_path, "/data/gam_model9.RData"))
model <- gam_model9
} else if (miu < 0.0000000604 & miu >= 0.00000005545) {
load(paste0(package_path, "/data/gam_model10.RData"))
model <- gam_model10
} else if (miu < 0.00000005545 & miu >= 0.0000000505) {
load(paste0(package_path, "/data/gam_model11.RData"))
model <- gam_model11
} else if (miu < 0.0000000505 & miu >= 0.00000004555) {
load(paste0(package_path, "/data/gam_model12.RData"))
model <- gam_model12
} else if (miu < 0.00000004555 & miu >= 0.0000000406) {
load(paste0(package_path, "/data/gam_model13.RData"))
model <- gam_model13
} else if (miu < 0.0000000406 & miu >= 0.00000003565) {
load(paste0(package_path, "/data/gam_model14.RData"))
model <- gam_model14
} else if (miu < 0.00000003565 & miu >= 0.0000000307) {
load(paste0(package_path, "/data/gam_model15.RData"))
model <- gam_model15
} else if (miu < 0.0000000307 & miu >= 0.00000002575) {
load(paste0(package_path, "/data/gam_model16.RData"))
model <- gam_model16
} else if (miu < 0.00000002575 & miu >= 0.0000000208) {
load(paste0(package_path, "/data/gam_model17.RData"))
model <- gam_model17
} else if (miu < 0.0000000208 & miu >= 0.00000001585) {
load(paste0(package_path, "/data/gam_model18.RData"))
model <- gam_model18
} else if (miu < 0.00000001585 & miu >= 0.0000000109) {
load(paste0(package_path, "/data/gam_model19.RData"))
model <- gam_model19
} else if (miu < 0.0000000109 & miu >= 0.00000000595) {
load(paste0(package_path, "/data/gam_model20.RData"))
model <- gam_model20
} else if (miu < 0.00000000595 & miu > 0.00000000055) {
load(paste0(package_path, "/data/gam_model21.RData"))
model <- gam_model21
} else if (miu <= 0.00000000055 & miu > 0.0000000001) {
load(paste0(package_path, "/data/gam_model22.RData"))
model <- gam_model22
} else if (miu <= 0.0000000001) {
load(paste0(package_path, "/data/gam_model23.RData"))
model <- gam_model23
} else {
stop("Invalid import.")
}
predict_Ne <- function(model, y_target, ne_range = c(1000, 1000000)) {
objective <- function(ne) {
pred <- predict(model, newdata = data.frame(Ne = ne), type = "response")
return((pred - y_target)^2)
}
result <- optimize(f = objective, interval = ne_range)
return(result$minimum)
}
variance <- data.frame(variance = Ks_variance)
Ne <- predict_Ne(model, variance)
tspc <- Ks_mean/(2*miu)-Ne
return(tspc)
}
Tspecies(c(0.008,0.005,0.004,0.011,0.006,0.004,0.005,0.006,0.004,0.004), 0.00000008)
package_path <- system.file("data", package = "Tspecies")
# 确保路径正确，必要时使用 `full.names=TRUE` 或检查文件是否存在
if (!file.exists(paste0(package_path, "/gam_model6.RData"))) {
stop("Model file not found!")
}
# 确保路径正确，必要时使用 `full.names=TRUE` 或检查文件是否存在
if (!file.exists(paste0(package_path, "/gam_model6.RData"))) {
stop("Model file not found!")
}
Tspecies <- function(Ks, miu) {
corrected_Ks <- (-3/4)*log(1-((4*Ks)/3))
Ks_variance <- var(corrected_Ks)
Ks_mean <- mean(corrected_Ks)
package_path <- system.file(package = "Tspecies")
if (miu >= 0.0000001) {
load(paste0(package_path, "/data/gam_model1.RData"))
model <- gam_model1
} else if (miu < 0.0000001 & miu >= 0.00000009505) {
load(paste0(package_path, "/data/gam_model2.RData"))
model <- gam_model2
} else if (miu < 0.00000009505 & miu >= 0.0000000901) {
load(paste0(package_path, "/data/gam_model3.RData"))
model <- gam_model3
} else if (miu < 0.0000000901 & miu >= 0.00000008515) {
load(paste0(package_path, "/data/gam_model4.RData"))
model <- gam_model4
} else if (miu < 0.00000008515 & miu >= 0.0000000802) {
load(paste0(package_path, "/data/gam_model5.RData"))
model <- gam_model5
} else if (miu < 0.0000000802 & miu >= 0.00000007525) {
load(paste0(package_path, "/data/gam_model6.RData"))
model <- gam_model6
} else if (miu < 0.00000007525 & miu >= 0.0000000703) {
load(paste0(package_path, "/data/gam_model7.RData"))
model <- gam_model7
} else if (miu < 0.0000000703 & miu >= 0.00000006535) {
load(paste0(package_path, "/data/gam_model8.RData"))
model <- gam_model8
} else if (miu < 0.00000006535 & miu >= 0.0000000604) {
load(paste0(package_path, "/data/gam_model9.RData"))
model <- gam_model9
} else if (miu < 0.0000000604 & miu >= 0.00000005545) {
load(paste0(package_path, "/data/gam_model10.RData"))
model <- gam_model10
} else if (miu < 0.00000005545 & miu >= 0.0000000505) {
load(paste0(package_path, "/data/gam_model11.RData"))
model <- gam_model11
} else if (miu < 0.0000000505 & miu >= 0.00000004555) {
load(paste0(package_path, "/data/gam_model12.RData"))
model <- gam_model12
} else if (miu < 0.00000004555 & miu >= 0.0000000406) {
load(paste0(package_path, "/data/gam_model13.RData"))
model <- gam_model13
} else if (miu < 0.0000000406 & miu >= 0.00000003565) {
load(paste0(package_path, "/data/gam_model14.RData"))
model <- gam_model14
} else if (miu < 0.00000003565 & miu >= 0.0000000307) {
load(paste0(package_path, "/data/gam_model15.RData"))
model <- gam_model15
} else if (miu < 0.0000000307 & miu >= 0.00000002575) {
load(paste0(package_path, "/data/gam_model16.RData"))
model <- gam_model16
} else if (miu < 0.00000002575 & miu >= 0.0000000208) {
load(paste0(package_path, "/data/gam_model17.RData"))
model <- gam_model17
} else if (miu < 0.0000000208 & miu >= 0.00000001585) {
load(paste0(package_path, "/data/gam_model18.RData"))
model <- gam_model18
} else if (miu < 0.00000001585 & miu >= 0.0000000109) {
load(paste0(package_path, "/data/gam_model19.RData"))
model <- gam_model19
} else if (miu < 0.0000000109 & miu >= 0.00000000595) {
load(paste0(package_path, "/data/gam_model20.RData"))
model <- gam_model20
} else if (miu < 0.00000000595 & miu > 0.00000000055) {
load(paste0(package_path, "/data/gam_model21.RData"))
model <- gam_model21
} else if (miu <= 0.00000000055 & miu > 0.0000000001) {
load(paste0(package_path, "/data/gam_model22.RData"))
model <- gam_model22
} else if (miu <= 0.0000000001) {
load(paste0(package_path, "/data/gam_model23.RData"))
model <- gam_model23
} else {
stop("Invalid import.")
}
predict_Ne <- function(model, y_target, ne_range = c(1000, 1000000)) {
objective <- function(ne) {
pred <- predict(model, newdata = data.frame(Ne = ne), type = "response")
cat("Ne:", ne, "Pred:", pred, "\n") # 输出预测值
if (is.na(pred)) stop("Predicted value is NA!")
return((pred - y_target)^2)
}
result <- optimize(f = objective, interval = ne_range)
return(result$minimum)
}
variance <- data.frame(variance = Ks_variance)
Ne <- predict_Ne(model, variance)
tspc <- Ks_mean/(2*miu)-Ne
return(tspc)
}
Tspecies(c(0.008,0.005,0.004,0.011,0.006,0.004,0.005,0.006,0.004,0.004), 0.00000008)
Tspecies(c(0.008,0.005,0.004,0.011,0.006,0.004,0.005,0.006,0.004,0.004), 0.00000008)
Tspecies <- function(Ks, miu) {
corrected_Ks <- (-3/4)*log(1-((4*Ks)/3))
Ks_variance <- var(corrected_Ks)
Ks_mean <- mean(corrected_Ks)
package_path <- system.file(package = "Tspecies")
if (miu >= 0.0000001) {
load(paste0(package_path, "/data/gam_model1.RData"))
model <- gam_model1
} else if (miu < 0.0000001 & miu >= 0.00000009505) {
load(paste0(package_path, "/data/gam_model2.RData"))
model <- gam_model2
} else if (miu < 0.00000009505 & miu >= 0.0000000901) {
load(paste0(package_path, "/data/gam_model3.RData"))
model <- gam_model3
} else if (miu < 0.0000000901 & miu >= 0.00000008515) {
load(paste0(package_path, "/data/gam_model4.RData"))
model <- gam_model4
} else if (miu < 0.00000008515 & miu >= 0.0000000802) {
load(paste0(package_path, "/data/gam_model5.RData"))
model <- gam_model5
} else if (miu < 0.0000000802 & miu >= 0.00000007525) {
load(paste0(package_path, "/data/gam_model6.RData"))
model <- gam_model6
} else if (miu < 0.00000007525 & miu >= 0.0000000703) {
load(paste0(package_path, "/data/gam_model7.RData"))
model <- gam_model7
} else if (miu < 0.0000000703 & miu >= 0.00000006535) {
load(paste0(package_path, "/data/gam_model8.RData"))
model <- gam_model8
} else if (miu < 0.00000006535 & miu >= 0.0000000604) {
load(paste0(package_path, "/data/gam_model9.RData"))
model <- gam_model9
} else if (miu < 0.0000000604 & miu >= 0.00000005545) {
load(paste0(package_path, "/data/gam_model10.RData"))
model <- gam_model10
} else if (miu < 0.00000005545 & miu >= 0.0000000505) {
load(paste0(package_path, "/data/gam_model11.RData"))
model <- gam_model11
} else if (miu < 0.0000000505 & miu >= 0.00000004555) {
load(paste0(package_path, "/data/gam_model12.RData"))
model <- gam_model12
} else if (miu < 0.00000004555 & miu >= 0.0000000406) {
load(paste0(package_path, "/data/gam_model13.RData"))
model <- gam_model13
} else if (miu < 0.0000000406 & miu >= 0.00000003565) {
load(paste0(package_path, "/data/gam_model14.RData"))
model <- gam_model14
} else if (miu < 0.00000003565 & miu >= 0.0000000307) {
load(paste0(package_path, "/data/gam_model15.RData"))
model <- gam_model15
} else if (miu < 0.0000000307 & miu >= 0.00000002575) {
load(paste0(package_path, "/data/gam_model16.RData"))
model <- gam_model16
} else if (miu < 0.00000002575 & miu >= 0.0000000208) {
load(paste0(package_path, "/data/gam_model17.RData"))
model <- gam_model17
} else if (miu < 0.0000000208 & miu >= 0.00000001585) {
load(paste0(package_path, "/data/gam_model18.RData"))
model <- gam_model18
} else if (miu < 0.00000001585 & miu >= 0.0000000109) {
load(paste0(package_path, "/data/gam_model19.RData"))
model <- gam_model19
} else if (miu < 0.0000000109 & miu >= 0.00000000595) {
load(paste0(package_path, "/data/gam_model20.RData"))
model <- gam_model20
} else if (miu < 0.00000000595 & miu > 0.00000000055) {
load(paste0(package_path, "/data/gam_model21.RData"))
model <- gam_model21
} else if (miu <= 0.00000000055 & miu > 0.0000000001) {
load(paste0(package_path, "/data/gam_model22.RData"))
model <- gam_model22
} else if (miu <= 0.0000000001) {
load(paste0(package_path, "/data/gam_model23.RData"))
model <- gam_model23
} else {
stop("Invalid import.")
}
predict_Ne <- function(model, y_target, ne_range = c(1000, 1000000)) {
objective <- function(ne) {
pred <- predict(model, newdata = data.frame(Ne = ne), type = "response")
if (is.na(pred)) stop("预测结果为NA，请检查模型和输入范围。")
return((pred - y_target)^2)
}
result <- optimize(f = objective, interval = ne_range)
return(result$minimum)
}
Ne <- predict_Ne(model, Ks_variance)
tspc <- Ks_mean/(2*miu) - Ne
return(tspc)
}
Tspecies(c(0.008,0.005,0.004,0.011,0.006,0.004,0.005,0.006,0.004,0.004), 0.00000008)
setwd("C:/Users/86222/Desktop/Tspecies")
devtools::document()
rm(list = c("Tspecies"))
devtools::document()
devtools::build()
usethis::use_package(package = "mgcv", type = "Imports")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
Tspecies(c(0.008,0.005,0.004,0.011,0.006,0.004,0.005,0.006,0.004,0.004), 0.00000008)
Tspecies(c(0.033,0.046,0.087,0.204,0.146,0.257,0.045,0.232,0.111,0.246), 0.00000008)
setwd("C:/Users/86222/Desktop/Tspecies")
Tspecies(c(0.158, 0.068, 0.118, 0.235, 0.257, 0.202, 0.066, 0.197, 0.278, 0.089), 0.00000008)
devtools::document()
devtools::build()
Tspecies(c(0.158, 0.068, 0.118, 0.235, 0.257, 0.202, 0.066, 0.197, 0.278, 0.089), 0.00000008)
devtools::document()
devtools::build()
?Tspecies
usethis::use_package(package="stats",type="Imports")
devtools::document()
devtools::build()
?Tspecies
devtools::document()
devtools::build()
devtools::document()
devtools::build()
Tspecies(c(0.033,0.046,0.087,0.204,0.146,0.257,0.045,0.232,0.111,0.246), 0.00000008)
devtools::document()
devtools::build()
Tspecies(c(0.033,0.046,0.087,0.204,0.146,0.257,0.045,0.232,0.111,0.246), 0.00000008)
devtools::document()
devtools::build()
Tspecies(c(0.033,0.046,0.087,0.204,0.146,0.257,0.045,0.232,0.111,0.246), 0.00000008)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
library(readxl)
getwd()
setwd("C:/Users/86222/Desktop/25寒假/Study/本基/zbw/4 收尾提交")
setwd("C:/Users/86222/Desktop/Tspecies/data")
data1 <- read_excel("data.xlsx", sheet = 1)
corrected_Ks <- (-3/4)*log(1-((4*data1)/3))
data0 <- read_excel("ab.xlsx")
corrected_Ks <- (-3/4)*log(1-((4*data0)/3))
Ks_variance <- var(corrected_Ks)
Ks_mean <- mean(corrected_Ks)
setwd("C:/Users/86222/Desktop/Tspecies")
Tspecies(c(0.000,0.000,0.00,0.003,0.001,0.003,0.002,0.004,0.001,0.003),0.00000009)
devtools::document()
devtools::build()
devtools::build()
devtools::document()
devtools::build()
Tspecies(c(0.000,0.000,0.00,0.003,0.001,0.003,0.002,0.004,0.001,0.003),0.00000009)
devtools::build()
devtools::document()
devtools::build()
Tspecies(c(0.000,0.000,0.00,0.003,0.001,0.003,0.002,0.004,0.001,0.003),0.00000009)
Tspecies(c(0.000,0.002,0.001,0.002,0.004,0.004,0.000,0.004,0.000,0.002,0.004,0.001,0.004,0.000,0.004,0.001,0.002,0.003,0.003,0.004,0.001,0.001,0.000,0.003,0.000,0.002,0.003,0.001,0.002,0.000,0.002,0.002,0.004,0.003,0.001,0.000,0.003,0.003,0.002,0.003,0.001,0.002,0.002,0.002,0.003,0.001,0.005,0.003,0.002,0.002,0.002,0.001,0.002,0.003,0.000,0.001,0.002,0.003,0.004,0.002,0.005,0.001,0.004,0.001,0.000,0.004,0.001,0.000,0.002,0.002,0.000,0.003,0.002,0.002,0.002,0.001,0.003,0.001,0.003,0.004,0.002,0.002,0.001,0.003,0.000,0.005,0.002,0.004,0.003,0.004,0.002,0.005,0.004,0.003,0.001,0.001,0.002,0.003,0.001,0.000),0.00000008)
setwd("C:/Users/86222/Desktop/Tspecies/data")
library(readxl)
library(mgcv)
library(mgcv)
getwd()
data1 <- read_excel("data.xlsx", sheet = 1)
gam_model1 <- gam(variance ~ s(Ne), data = data1)
save(gam_model1, file = "gam_model1.RData")
data2 <- read_excel("data.xlsx", sheet = 2)
gam_model2 <- gam(variance ~ s(Ne), data = data2)
save(gam_model2, file = "gam_model2.RData")
data3 <- read_excel("data.xlsx", sheet = 3)
gam_model3 <- gam(variance ~ s(Ne), data = data3)
save(gam_model3, file = "gam_model3.RData")
data4 <- read_excel("data.xlsx", sheet = 4)
gam_model4 <- gam(variance ~ s(Ne), data = data4)
save(gam_model4, file = "gam_model4.RData")
data5 <- read_excel("data.xlsx", sheet = 5)
gam_model5 <- gam(variance ~ s(Ne), data = data5)
save(gam_model5, file = "gam_model5.RData")
data6 <- read_excel("data.xlsx", sheet = 6)
gam_model6 <- gam(variance ~ s(Ne), data = data6)
save(gam_model6, file = "gam_model6.RData")
data7 <- read_excel("data.xlsx", sheet = 7)
gam_model7 <- gam(variance ~ s(Ne), data = data7)
save(gam_model7, file = "gam_model7.RData")
data8 <- read_excel("data.xlsx", sheet = 8)
gam_model8 <- gam(variance ~ s(Ne), data = data8)
save(gam_model8, file = "gam_model8.RData")
data9 <- read_excel("data.xlsx", sheet = 9)
gam_model9 <- gam(variance ~ s(Ne), data = data9)
save(gam_model9, file = "gam_model9.RData")
data10 <- read_excel("data.xlsx", sheet = 10)
gam_model10 <- gam(variance ~ s(Ne), data = data10)
save(gam_model10, file = "gam_model10.RData")
data11 <- read_excel("data.xlsx", sheet = 11)
gam_model11 <- gam(variance ~ s(Ne), data = data11)
save(gam_model11, file = "gam_model11.RData")
data12 <- read_excel("data.xlsx", sheet = 12)
gam_model12 <- gam(variance ~ s(Ne), data = data12)
save(gam_model12, file = "gam_model12.RData")
data13 <- read_excel("data.xlsx", sheet = 13)
gam_model13 <- gam(variance ~ s(Ne), data = data13)
save(gam_model13, file = "gam_model13.RData")
data14 <- read_excel("data.xlsx", sheet = 14)
gam_model14 <- gam(variance ~ s(Ne), data = data14)
save(gam_model14, file = "gam_model14.RData")
data15 <- read_excel("data.xlsx", sheet = 15)
gam_model15 <- gam(variance ~ s(Ne), data = data15)
save(gam_model15, file = "gam_model15.RData")
data16 <- read_excel("data.xlsx", sheet = 16)
gam_model16 <- gam(variance ~ s(Ne), data = data16)
save(gam_model16, file = "gam_model16.RData")
data17 <- read_excel("data.xlsx", sheet = 17)
gam_model17 <- gam(variance ~ s(Ne), data = data17)
save(gam_model17, file = "gam_model17.RData")
data18 <- read_excel("data.xlsx", sheet = 18)
gam_model18 <- gam(variance ~ s(Ne), data = data18)
save(gam_model18, file = "gam_model18.RData")
data19 <- read_excel("data.xlsx", sheet = 19)
gam_model19 <- gam(variance ~ s(Ne), data = data19)
save(gam_model19, file = "gam_model19.RData")
data20 <- read_excel("data.xlsx", sheet = 20)
gam_model20 <- gam(variance ~ s(Ne), data = data20)
save(gam_model20, file = "gam_model20.RData")
data21 <- read_excel("data.xlsx", sheet = 21)
gam_model21 <- gam(variance ~ s(Ne), data = data21)
save(gam_model21, file = "gam_model21.RData")
data22 <- read_excel("data.xlsx", sheet = 22)
gam_model22 <- gam(variance ~ s(Ne), data = data22)
save(gam_model22, file = "gam_model22.RData")
data23 <- read_excel("data.xlsx", sheet = 23)
gam_model23 <- gam(variance ~ s(Ne), data = data23)
save(gam_model23, file = "gam_model23.RData")
setwd("C:/Users/86222/Desktop/Tspecies")
Tspecies(c(0.000,0.002,0.001,0.002,0.004,0.004,0.000,0.004,0.000,0.002,0.004,0.001,0.004,0.000,0.004,0.001,0.002,0.003,0.003,0.004,0.001,0.001,0.000,0.003,0.000,0.002,0.003,0.001,0.002,0.000,0.002,0.002,0.004,0.003,0.001,0.000,0.003,0.003,0.002,0.003,0.001,0.002,0.002,0.002,0.003,0.001,0.005,0.003,0.002,0.002,0.002,0.001,0.002,0.003,0.000,0.001,0.002,0.003,0.004,0.002,0.005,0.001,0.004,0.001,0.000,0.004,0.001,0.000,0.002,0.002,0.000,0.003,0.002,0.002,0.002,0.001,0.003,0.001,0.003,0.004,0.002,0.002,0.001,0.003,0.000,0.005,0.002,0.004,0.003,0.004,0.002,0.005,0.004,0.003,0.001,0.001,0.002,0.003,0.001,0.000),0.00000008)
devtools::document()
devtools::build()
devtools::document()
devtools::build()
Tspecies(c(0.000,0.002,0.001,0.002,0.004,0.004,0.000,0.004,0.000,0.002,0.004,0.001,0.004,0.000,0.004,0.001,0.002,0.003,0.003,0.004,0.001,0.001,0.000,0.003,0.000,0.002,0.003,0.001,0.002,0.000,0.002,0.002,0.004,0.003,0.001,0.000,0.003,0.003,0.002,0.003,0.001,0.002,0.002,0.002,0.003,0.001,0.005,0.003,0.002,0.002,0.002,0.001,0.002,0.003,0.000,0.001,0.002,0.003,0.004,0.002,0.005,0.001,0.004,0.001,0.000,0.004,0.001,0.000,0.002,0.002,0.000,0.003,0.002,0.002,0.002,0.001,0.003,0.001,0.003,0.004,0.002,0.002,0.001,0.003,0.000,0.005,0.002,0.004,0.003,0.004,0.002,0.005,0.004,0.003,0.001,0.001,0.002,0.003,0.001,0.000),0.00000008)
?Tspecies
devtools::document()
devtools::build()
?Tspecies
devtools::document()
devtools::build()
load("C:/Users/86222/Desktop/Tspecies/inst/extdata/gam_model4.RData")
load("C:/Users/86222/Desktop/Tspecies/inst/extdata/gam_model3.RData")
View(gam_model3)
devtools::document()
devtools::build()
library(Tspecies)
Tspecies(c(0.000,0.002,0.001,0.002,0.004,0.004,0.000,0.004,0.000,0.002,0.004,0.001,0.004,0.000,0.004,0.001,0.002,0.003,0.003,0.004,0.001,0.001,0.000,0.003,0.000,0.002,0.003,0.001,0.002,0.000,0.002,0.002,0.004,0.003,0.001,0.000,0.003,0.003,0.002,0.003,0.001,0.002,0.002,0.002,0.003,0.001,0.005,0.003,0.002,0.002,0.002,0.001,0.002,0.003,0.000,0.001,0.002,0.003,0.004,0.002,0.005,0.001,0.004,0.001,0.000,0.004,0.001,0.000,0.002,0.002,0.000,0.003,0.002,0.002,0.002,0.001,0.003,0.001,0.003,0.004,0.002,0.002,0.001,0.003,0.000,0.005,0.002,0.004,0.003,0.004,0.002,0.005,0.004,0.003,0.001,0.001,0.002,0.003,0.001,0.000),0.00000009)
setwd("C:/Users/86222/Desktop/Tspecies")
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::install_github("limj0987/Tspecies")
library(Tspecies)
Tspecies(c(0.000,0.002,0.001,0.002,0.004,0.004,0.000,0.004,0.000,0.002,0.004,0.001,0.004,0.000,0.004,0.001,0.002,0.003,0.003,0.004,0.001,0.001,0.000,0.003,0.000,0.002,0.003,0.001,0.002,0.000,0.002,0.002,0.004,0.003,0.001,0.000,0.003,0.003,0.002,0.003,0.001,0.002,0.002,0.002,0.003,0.001,0.005,0.003,0.002,0.002,0.002,0.001,0.002,0.003,0.000,0.001,0.002,0.003,0.004,0.002,0.005,0.001,0.004,0.001,0.000,0.004,0.001,0.000,0.002,0.002,0.000,0.003,0.002,0.002,0.002,0.001,0.003,0.001,0.003,0.004,0.002,0.002,0.001,0.003,0.000,0.005,0.002,0.004,0.003,0.004,0.002,0.005,0.004,0.003,0.001,0.001,0.002,0.003,0.001,0.000),0.00000009)
devtools::document()
devtools::build()
setwd("C:/Users/86222/Desktop/Tspecies")
remove.packages("Tspecies")
devtools::install_github("limj0987/Tspecies")
library(Tspecies)
Tspecies(c(0.000,0.002,0.001,0.002,0.004,0.004,0.000,0.004,0.000,0.002,0.004,0.001,0.004,0.000,0.004,0.001,0.002,0.003,0.003,0.004,0.001,0.001,0.000,0.003,0.000,0.002,0.003,0.001,0.002,0.000,0.002,0.002,0.004,0.003,0.001,0.000,0.003,0.003,0.002,0.003,0.001,0.002,0.002,0.002,0.003,0.001,0.005,0.003,0.002,0.002,0.002,0.001,0.002,0.003,0.000,0.001,0.002,0.003,0.004,0.002,0.005,0.001,0.004,0.001,0.000,0.004,0.001,0.000,0.002,0.002,0.000,0.003,0.002,0.002,0.002,0.001,0.003,0.001,0.003,0.004,0.002,0.002,0.001,0.003,0.000,0.005,0.002,0.004,0.003,0.004,0.002,0.005,0.004,0.003,0.001,0.001,0.002,0.003,0.001,0.000),0.00000009)
